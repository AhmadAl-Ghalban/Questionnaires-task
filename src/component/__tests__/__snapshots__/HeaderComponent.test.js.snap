// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderComponent renders correctly with custom title 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flexDirection": "row",
      "justifyContent": "center",
      "paddingTop": 10,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
  >
    <FeatherIcon
      color="#000000"
      name="arrow-left"
      size={26}
    />
  </View>
  <Text
    style={
      {
        "color": "#000",
        "flex": 1,
        "fontSize": 20,
        "fontWeight": "bold",
        "textAlign": "center",
      }
    }
  >
    Custom Title
  </Text>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
  />
</View>
`;

exports[`HeaderComponent renders correctly with default props 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flexDirection": "row",
      "justifyContent": "center",
      "paddingTop": 10,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
  >
    <FeatherIcon
      color="#000000"
      name="arrow-left"
      size={26}
    />
  </View>
  <Text
    style={
      {
        "color": "#000",
        "flex": 1,
        "fontSize": 20,
        "fontWeight": "bold",
        "textAlign": "center",
      }
    }
  >
    title
  </Text>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
  />
</View>
`;

exports[`HeaderComponent renders correctly with leftButton hidden 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flexDirection": "row",
      "justifyContent": "center",
      "paddingTop": 10,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
  />
  <Text
    style={
      {
        "color": "#000",
        "flex": 1,
        "fontSize": 20,
        "fontWeight": "bold",
        "textAlign": "center",
      }
    }
  >
    title
  </Text>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
  />
</View>
`;

exports[`HeaderComponent renders correctly with rightButton visible 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flexDirection": "row",
      "justifyContent": "center",
      "paddingTop": 10,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
  >
    <FeatherIcon
      color="#000000"
      name="arrow-left"
      size={26}
    />
  </View>
  <Text
    style={
      {
        "color": "#000",
        "flex": 1,
        "fontSize": 20,
        "fontWeight": "bold",
        "textAlign": "center",
      }
    }
  >
    title
  </Text>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
  >
    <FeatherIcon
      color="#586FB5"
      name="settings"
      size={26}
    />
  </View>
</View>
`;
